swagger: "2.0"
info:
  title: "Amadeus Travel Innovation Sandbox"
  version: "1.2"
  contact:
    name: Amadeus Innovation and Research
    url: "https://sandbox.amadeus.com"
  license:
    name: Amadeus Travel Innovation Sandbox License
    url: "https://sandbox.amadeus.com/terms-use"
host: api.sandbox.amadeus.com
basePath: /v1.2
schemes:
  - https
produces:
  - application/json
paths:
  /flights/inspiration-search:
    get:
      operationId: Flight Inspiration Search
      summary: The Flight Inspiration Search API lets you go beyond the traditional search by origin, destination and dates to meet the needs of travelers looking for suggestions and a search experience that reflects the way they choose their trip. This can help you answer the question "Where can I go within a given travel budget?" 
      description: |
        <p>The Inspiration Flight Search allows you to find the prices of one-way and return flights from an origin city without necessarily having a destination, or even a flight date, in mind. The search doesn't return a distinct set of price options, but rather, can tell you the price of flying from a given city to some destination, for a trip of a given duration, that falls within a given date range.</p>

        <p>The search is based on our Extreme Search platform, which continually caches a large number of flight search results from a list of origin cities to a variety of destinations. Since it's a cached search, the response time is fast, but not all origin airports are available. Here is <a href="https://github.com/amadeus-travel-innovation-sandbox/sandbox-content/blob/master/flight-search-cache-origin-destination.csv">a list of the currently supported origin-destination IATA location pairs</a>. We try to keep this list as fresh as possible for you, but be aware that it may not always be exactly up-to-date and it can change without warning.</p>

        <p>Despite this limitation don't underestimate the power of this API. Thanks to its quick response speed you can easily pair it with other APIs to provide a low fare and inspiration for any destination. For example, you can could combine it with a event search API and suggest a total price to see go and see an concert or a game in a selection of cities.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city from which the traveler will depart. See the location and airport interfaces for more information.
          required: true
          type: string
          default: "NYC"
        - name: destination
          in: query
          description:  <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going 
          required: false
          type: string
          default: "LAX"
        - name: departure_date
          in: query
          description: Range of dates between which the traveler could depart. Dates are specified in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> yyyy-MM-dd date format. Ranges are inclusive and ranges of months will apply from the start to the end of the month. If just a single date is specified, only that date will be searched. By default, the date range starts today and applies up to 361 in the future is applied. Past dates are generally not supported, future dates should be in the next 361 days, although results start to become sparse after about 6 months in the future, as airlines may still be defining their schedules. The default is to search all future dates available.
          required: false
          type: string
          default: "2016-11-16--2016-11-26"
        - name: one-way
          in: query
          required: false
          type: boolean
          default: false
          description: When set to true, the query will be for a single trip from the origin to the destination. When this parameter is not provided, or is set to false, the query is for a round trip from the origin to the destination and back again.
        - name: duration
          in: query
          description: The allowed duration or range of durations of the trip, in days. This parameter must not be set if the one-way parameter is set to true.
          required: false
          type: string
          default: "1--15"
        - name: direct
          in: query
          description: Limit the search to results that do not require the passenger to change plane?
          required: false
          type: boolean
          default: false
        - name: max_price
          in: query
          description: "Maximum price of trips to find in the result set, in the currency specified for this origin and destination pair in the cache contents spreadsheet. So, for example, if the origin is NYC, and the max price is 400, this means 400 USD. If the origin is PAR, and the max price is 400, this means 400 EUR. By default, no limit is applied"
          required: false
          type: string
          format: Integer
        - name: aggregation_mode
          in: query
          description: "Specifies the granularity of results to be found. DESTINATION is the default and finds one result per city. COUNTRY finds one result per country, DAY finds on result for every day in the date range, WEEK finds one result for every week in the date range. Note that specifying a small granularity but a large search scope may result in a huge output. For some very large outputs, the API may refuse to provide a result."
          required: false
          type: string
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/ExtremeSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"          
  /flights/extensive-search:
    get:
      operationId: Flight Extensive Search
      summary: The Extensive Flight Search API allows building travel searches based on very flexible and open range of dates. You can use it to answer questions such as "When is the best date to fly...".  It's built on Amadeus' Featured Results technology, which returns thousands of results (prices, itineraries and dates) in a matter of milliseconds. Results are available over half a calendar year with a 1 to 15 day stay duration    
      description: |
        <p>The Extensive Flight Search allows you to find the prices of one-way or return flights between two airports over a large number of dates, and for a large variety of stay durations. The search doesn't return exact itineraries, but rather tells you the best price for a flight on a given day, for a stay of a given duration.</p>

        <p>The search is based on our Extreme Search platform, which continually caches a large number of flight search results from a list of origin cities to a variety of destinations. Since it's a cached search, the response time is fast, but not all origin airports are available. Here is <a href="https://github.com/amadeus-travel-innovation-sandbox/sandbox-content/blob/master/flight-search-cache-origin-destination.csv">a list of the currently supported origin-destination IATA location pairs</a>. We try to keep this list as fresh as possible for you, but be aware that it may not always be exactly up-to-date and it can change without warning.</p>

        <p>That said, a price graph like this provides a powerful bargin shopping tool - allowing travelers with flexible itineraries to identify days on which they can get the cheapest flights to their destinations.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city from which the traveler will depart. See the location and airport interfaces for more information.
          required: true
          type: string
          default: "FRA"
        - name: destination
          in: query
          description:  <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going 
          required: true
          type: string
          default: "LON"
        - name: departure_date
          in: query
          description: |
             Range of dates between which the traveler could depart. Dates are specified in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> yyyy-MM-dd date format. Ranges are inclusive and ranges of months will apply from the start to the end of the month. If just a single date is specified, only that date will be searched. By default, the date range starts today and applies up to 361 in the future is applied. Past dates are generally not supported, future dates should be in the next 361 days, although results start to become sparse after about 6 months in the future, as airlines may still be defining their schedules. The default is to search all future dates available. 
          required: false
          type: string
          default: "2016-11-16--2016-11-26"
        - name: one-way
          in: query
          required: false
          type: boolean
          default: false
          description: When set to true, the query will be for a single trip from the origin to the destination. When this parameter is not provided, or is set to false, the query is for a round trip from the origin to the destination and back again.
        - name: duration
          in: query
          description: The allowed duration or range of durations of the trip, in days. This parameter must not be set if the one-way parameter is set to true.
          required: false
          type: string
          default: "1--15"
        - name: direct
          in: query
          description: Limit the search to results that do not require the passenger to change plane?
          required: false
          type: boolean
          default: false
        - name: max_price
          in: query
          description: "Maximum price of trips to find in the result set, in the currency specified for this origin and destination pair in the cache contents spreadsheet. So, for example, if the origin is NYC, and the max price is 400, this means 400 USD. If the origin is PAR, and the max price is 400, this means 400 EUR. By default, no limit is applied"
          required: false
          type: string
          default: "950"
        - name: aggregation_mode
          in: query
          description: "Specifies the granularity of results to be found. DAY is the default when one-way is true finds a result for departure date in the date range. STAY is the default otherwise and finds all round trip permutations for this route withim the given date range. DESTINATION finds one result, only the cheapest price for this route over the provided date range. WEEK finds the cheapest result for every week in the date range. Note that specifying a small granularity but a large search scope may result in a huge output. For some very large outputs, the API may refuse to provide a result."
          required: false
          type: string
          default: "DAY"
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/ExtremeSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"          
  /flights/low-fare-search:
    get:
      operationId: Flight Low-Fare Search   
      summary: The Low-Fare Search API lets you find the cheapest one way or return itineraries and fares between two airports at specific dates.
      description: |
          <p>This is the low fare search engine Amadeus uses to retrieve the best price for flights, based on our latest Master Pricer Travel Board technology. This document describes how to make a low fare search and how to handle the returned messages.</p>
          
          <p>The message is composed of multiple results for given request. A result is defined by a unique combination of price, tax, passenger type, fare type, cabin, and availability for each requested segment.</p> 
          
          <p>A result is then composed of single or multiple itineraries. Each itinerary is composed of an outbound leg, and, if a return date was specified, an inbound leg. Each leg is composed of a list of one or more flights, that the traveller will be required to take in order to get from the origin airport to the destination airport.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin
          in: query
          description: City code from which the traveler will depart. See the location and airport interfaces for more information.
          required: true
          type: string
          default: "BOS"
        - name: destination
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going 
          required: true
          type: string
          default: "LON"
        - name: departure_date
          in: query
          description: The date on which the traveler will depart from the origin to go to the destination. You can specify a date range of up to 2 days. For a larger date range, use the Extensive Search. Dates are specified in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> yyyy-MM-dd date format and separated by --.
          required: true
          format: string
          type: string
          default: "2016-11-25"
        - name: return_date
          in: query
          description: The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, the search will find only one-way trips. If this, or the return_by parameter are specified, only return trips are found. You can specify a date range of up to 2 days.
          required: false
          type: string
          default: "2016-11-28"
        - name: arrive_by
          in: query
          description: The datetime by which the outbound flight should arrive, based on local time at the destination airport.  Date-times are specified in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> yyyy-MM-ddTHH:mm date format
          required: false
          type: string
          default: "2016-11-25T16:00"
        - name: return_by
          in: query
          description: The time by which the inbound flight should arrive, based on local time at the airport specified as the origin parameter
          required: false
          type: string
          default: "2016-11-28T08:00"
        - name: adults
          in: query
          description: "The number of adult (age 12 and over) passengers traveling on this flight."
          required: false
          type: integer
          default: 1
        - name: children
          in: query
          description: "The number of child (younger than age 12 on date of departure) passengers traveling on this flight who will each have their own separate seat"
          required: false
          type: integer
          default: 0
        - name: infants
          in: query
          description: "The number of infant (younger than age 2 on date of departure) passengers traveling on this flight. Infants travel in the lap of an adult passenger, and thus the number of infants must not exceed the number of adults."
          required: false
          type: integer
          default: 0
        - name: include_airlines
          in: query
          description: If specified, all results will include at least one flight where one or more of these airlines is the marketing carrier. This behaves as an OR function. Airlines are specified using <a href="https://en.wikipedia.org/wiki/Airline_codes"><a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a>s</a>.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: exclude_airlines
          in: query
          description: If specified, no results will include any flights where any of these airlines is the marketing carrier. Airlines are specified using <a href="https://en.wikipedia.org/wiki/Airline_codes"><a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a>s</a>.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: nonstop
          in: query
          description: Setting this to true will find only flights that do not require the passenger to change from one flight to another
          required: false
          type: boolean
          default: false
        - name: max_price
          in: query
          description: "Maximum price of trips to find in the result set, in USD (US dollars) unless some other currency code is specified. By default, no limit is applied"
          required: false
          type: integer
          default: 980
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "USD"
        - name: travel_class
          in: query
          description: "Searches for results where the majority of the itinerary flight time should be in a the specified cabin class or higher"
          required: false
          type: string
          default: "ECONOMY"
        - name: number_of_results
          in: query
          description: "The number of results to display. This will not be strictly interpreted but used as a guideline to display a useful number of results. By default, the number of results is dynamically determined. A maximum of 250 results will be displayed."
          required: false
          type: integer
          default: 5
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/LowFareSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /flights/affiliate-search:
    get:
      operationId: Flight Affiliate Search   
      summary: The  Flight Affiliate Search API uses Travel Audience Connect's affiliate network API to search flights from our list of partners and provides deep-links to allow the user to book directly on the airline website.
      description: |
          <p>The Flight Affiliate Search API combines Amadeus' flight search technology with Travel Audience's Connect API partners to provide a unique flight search, where all results come with deep-links to book the flight at a partner's website. The API will let you easily provide the traveler with a path to book flights from your application.</p>
          <p>Travel Audience Connect partners include
          <ul>
            <li><a href="http://www.cityjet.com/">CityJet</a>, <a href="https://www.aireuropa.com/en/flights">Air Europa</a> and <a href="http://www.flytap.com/">TAP</a> in Western Europe,</li>
            <li><a href="http://uralairlines.com/">Ural Airlines</a> in Russia, </li>
            <li><a href="http://www.avianca.com.br/">Avianca Brazil</a>  and</li>
            <li><a href="http://www.jal.com/">JAL</a> in East Asia</li>
          </ul>
          </p>
          <p>Only Travel Audience Connect partner airlines are searched. For an up-to-date list of routes, see the route maps on each partners respective websites above. You can earn commission using the deep links provided in the search results if you sign up for an account at <a href="http://connect.travelaudience.com/">connect.travelaudience.com</a>.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin
          in: query
          description: City code from which the traveler will depart. See the location and airport interfaces for more information.
          required: true
          type: string
          default: "LON"
        - name: destination
          in: query
          description:  <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going 
          required: true
          type: string
          default: "DUB"
        - name: departure_date
          in: query
          description: "The date on which the traveler will depart from the origin to go to the destination. The maximum scope for a date range is 2 days, for a larger scope, use the Extensive Search! "
          required: true
          type: string
          default: "2016-11-25"
        - name: return_date
          in: query
          description: "The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, the search will find only one-way trips. If this, or the return_by parameter are specified, only return trips are found"
          required: false
          type: string
          default: "2016-11-28"
        - name: adults
          in: query
          description: "The number of adult (age 12 and over) passengers traveling on this flight."
          required: false
          type: integer
          default: 1
        - name: children
          in: query
          description: "The number of child (younger than age 12 on date of departure) passengers traveling on this flight who will each have their own separate seat"
          required: false
          type: integer
          default: 0
        - name: infants
          in: query
          description: "The number of infant (younger than age 2 on date of departure) passengers traveling on this flight. Infants travel in the lap of an adult passenger, and thus the number of infants must not exceed the number of adults."
          required: false
          type: integer
          default: 0
        - name: include_merchants
          in: query
          description: If specified, all results will include at least one flight where one or more of these airlines is the marketing carrier. Airlines are specified using <a href="https://en.wikipedia.org/wiki/Airline_codes"><a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a>s</a>
          required: false          
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: exclude_merchants
          in: query
          description: If specified, no results will include any flights where any of these airlines is the marketing carrier. Airlines are specified using <a href="https://en.wikipedia.org/wiki/Airline_codes"><a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a>s</a>
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: max_price
          in: query
          description: "Maximum price of trips to find in the result set, in USD (US dollars) unless some other currency code is specified. By default, no limit is applied"
          required: false
          type: integer
          default: 980
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "EUR"
        - name: mobile
          in: query
          description: "Setting this to true will show mobile web deeplinks "
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/AffiliateSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"         
  /location/{code}:
    get:
      operationId: Location Information
      summary: The Location Information API allows you to quickly find out more information about any IATA city or airport location code. With this API, you can find information such as city and airport names and locations, as well as information on timezones and airport usage.
      description: |
        <p>This service retrieves the location information corresponding to a IATA city or airport code.</p>
      
        <p>When provided with an <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>, the service determines whether this code could relate to a city code, an airport code or both. If the city could contain multiple airports, it will return all possible airports that correspond to that city code.</p>

        <p>This API is based on the Amadeus supported <a href="http://opentraveldata.github.io/geobases">Geobases</a> open-source project. If you wish to make your own database with all IATA location information, in order to get faster reponses, you can download the latest raw data from their <a href="https://github.com/opentraveldata/opentraveldata/blob/master/opentraveldata/optd_por_public.csv">github page</a>.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: code
          in: path
          description: IATA location code for which further information is required
          required: true
          type: string
          default: BOS
      responses:
        200:
          description: Valid Location lookup Response
          schema:
            $ref: "#/definitions/LocationResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /airports/autocomplete:
    get:
      operationId: Airport Autocomplete
      summary: Using the term parameter, the Airport Autocomplete API provides a simple means to find an IATA location code for flight search based on a city or airport name. By only using the country parameter, this API is also able to find all the IATA location codes associated with a country. Both term and country parameters can be used together to filter the results accordingly. The API is fully JQuery-Autocomplete compatible to enable you to quickly build a drop-down list for your users to find the right airport easily. 
      description: |
        <p>Using the term parameter and given the start of any word in an airport's official name, a city name, or the start of an <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>, this API provides the full name and IATA location code of the city or airport, for use in flight searches. Only major cities and civilian airports with several commercial flights per week are included by default. The response provides up to 20 possible matches, sorted by importance, in a <a href="http://jqueryui.com/autocomplete/">JQuery UI Autocomplete</a> compatible format. <a href="https://github.com/amadeus-travel-innovation-sandbox/sandbox-content/blob/master/airport-autocomplete-template.html">This sample implementation</a> using JQuery UI may help. This API uses data from the <a href="https://github.com/opentraveldata/opentraveldata/blob/master/opentraveldata/optd_por_public.csv">OpenTravelData</a> project.
        </p> 
        <p>By only using the country parameter, this API is also able to find all the IATA location codes associated with a country. Both term and country parameters can be used together to filter the results accordingly.          
        </p>
        <p>The value returned is the IATA location code. The label returned is always in UTF-8 format, with the airport official name (which is often in the native language), in the format of English City Name (if not already included in the airport name).</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: term
          in: query
          description: Search keyword that should represent the start of a word in a city or airport name.
          required: false
          type: string
          default: "Ban"
        - name: country
          in: query
          description: Identified a country based of a <a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes">ISO 3166-1 alpha-2 code</a>
          required: false
          type: string
          default: "US"
        - name: all_airports
          in: query
          description: Boolean to include or not all airports, no matter their traffic rank. False by default, to only display relevant airports.
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: Valid Search Response
          schema:
            type: array
            items:
              $ref: "#/definitions/AirportAutocompleteResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /airports/nearest-relevant:
    get:
      operationId: Nearest Relevant Airport
      summary: The Nearest Relevant Airport can find the most useful nearby airport to a given location.
      description: |
        <p>This service gives the most relevant airports in a radius of 500 km around the given coordinates. The relevance of an airport is computed by dividing the number of airport movements (take offs and landings) by the distance from the point. This causes the relevance of an airport to increase exponentially as you approach it.</p>

        <p>To minimize response time, all distances are computed as a <a href="http://en.wikipedia.org/wiki/Great-circle_distance">great-circle distance</a> from the provided coordinates to the airport coordinates, and thus do not take into account traffic conditions, international boundaries, mountains, water, or other elements that might make the a nearby airport hard to reach.</p>

        <p>Only civilian airports with at least several commercial flights per week are included in the results.</p>

        <p>The result is a list of airports sorted by decreasing relevance. It always contains the nearest airport with significant commercial traffic. You can freely download the <a href="https://github.com/opentraveldata/opentraveldata/blob/master/opentraveldata/optd_por_public.csv">point of reference information</a> used by this API from the <a href="https://github.com/opentraveldata/opentraveldata">Open Travel Data</a> project.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: latitude
          in: query
          description: Latitude location to be at the center of your search circle.
          required: true
          type: string
          default: "46.6734"
        - name: longitude
          in: query
          description: Longitude location to be at the center of your search circle.
          required: true
          type: string
          default: "-71.7412"
      responses:
        200:
          description: Valid Search Response
          schema:
              type: array
              items:
                $ref: "#/definitions/NearestAirport"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /hotels/search-airport:
    get:
      operationId: Hotel Airport Search
      summary: The Hotel Airport Search API uses Amadeus' fast hotel search engine to locate the cheapest available rooms near a given airport, for a given stay period. This API is ideal if you want to connect flight and hotels. Provide an IATA airport code, as well as the check-in and check-out dates, and get a list of up to 140 properties (names, codes, image, amenities) with their locations and rates. Optional parameters such as currency and maximum rates, amenities or hotel chain codes are also available and can be used to narrow down the results. More optional parameters such as show_sold_out & rooms can be used to show sold out rooms and all available rooms. 
      description: |
        <p>A fast Hotel shopping API to see which hotels are available in a given area, on a given day and displays their lowest prices. With this API you can find out the price of the cheapest daily rate for all hotels near a given airport.</p>
    
        <p>This API allows you to quickly see the locations of hotels near a given airport, and what prices in that area look like. Note that hotel images are not available to users outside of Amadeus, as we are not licensed to redistribute them. The API is based on our high-speed hotel pricing cache, which is also used to power the <a href="https://hotelsearchengine.amadeus.com/">Amadeus Hotel Search Engine</a> application. Results are returned very quickly, response times are generally under 2s. Our cache has great global coverage and is constantly refreshed with the latest prices.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: location
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA airport code</a> for hotel availability is required requested.
          required: true
          type: string
          default: "BOS"
        - name: check_in
          in: query
          description: "Date on which the guest will begin their stay in the hotel. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-15"
        - name: check_out
          in: query
          description: "Date on which the guest will end their stay in the hotel."
          required: true
          type: string
          default: "2016-11-16"
        - name: radius
          in: query
          description: Radius around the center to look for hotels in kilometers (km).
          required: false
          type: integer
          default: 42
        - name: lang
          in: query
          description: "The preferred language of the content related to each hotel. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "USD"
        - name: chain
          in: query
          description: "Narrows the hotel search to a given hotel provider. The hotel chain is indicated by the first two characters of the property code."
          required: false
          type: string
          default: "6C"
        - name: max_rate
          in: query
          description: "The maximum amount per night that any hotel in the shopping response should cost. This is calculated by dividing the total price of the stay for the given dates by the number of nights specified falling between the check_in and check_out dates."
          required: false
          type: number
          default: 500
        - name: number_of_results
          in: query
          description: "The maximum number of hotels to return in the results set. Hotels are ordered by total price, so if more than the given maximum number of hotels are available, only the cheapest options are returned."
          required: false
          type: integer
          default: 20
        - name: all_rooms
          in: query
          description: "This option if enabled will return all hotel room rates, not just the lowest room rate. Note: This will have an impact on the response time due to the larger messages returned."
          required: false
          type: boolean
          default: false
        - name: show_sold_out
          in: query
          description: This option if enabled will return hotel names and addresses even if rooms are sold out (closed properties)
          required: false
          type: boolean
          default: false
        - name: amenity
          in: query
          description: |
            Hotel <a href="hotels-api-supported-amenities-filter">amenities filter</a> to search narrow down hotels with certain amenities. For example&colon; amenity=POOL. (Note: multiple amenities can be used in searches: amenity=PARKING&amenity=RESTAURANT&amenity=PETS_ALLOWED).
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/HotelSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /hotels/search-circle:
    get:
      operationId: Hotel Geosearch by circle
      summary: The Hotel Lowest-Price Search API uses Amadeus' fast hotel search engine to locate the cheapest available rooms within a given radius of a defined point for a given stay period.
      description: | 
        <p>A fast Hotel shopping API to see which hotels are available in a given area, on a given day and displays their lowest prices. With this API you can find out the price of the cheapest daily rate for all hotels within a specified radius of a point.</p>
      
        <p>This API allows you to quickly see the hotel locations in a region, and what prices in that area look like,  as well as the check-in and check-out dates, and get list of up to 140 properties (names, codes, image, amenities) with their locations and rates. Optional parameters such as currency and maximum rates, amenities or hotel chain codes are also available and can be used to narrow down the results. More optional parameters such as show_sold_out & rooms can be used to show sold out rooms and all available rooms. </p>
    
        <p>The API is based on our high-speed hotel pricing cache, which is also used to power the <a href="https://hotelsearchengine.amadeus.com/">Amadeus Hotel Search Engine</a> application. Results are returned very quickly, response times are generally under 2s. Our cache has great global coverage and is constantly refreshed with the latest prices.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: latitude
          in: query
          description: Latitude of the center of the search.
          required: true
          type: number
          default: 36.0857
        - name: longitude
          in: query
          description: Longitude of the center of the search.
          required: true
          type: number
          default: -115.1541
        - name: radius
          in: query
          description: Radius around the center to look for hotels in kilometers (km).
          required: true
          type: integer
          default: 42
        - name: check_in
          in: query
          description: "Date on which the guest will begin their stay in the hotel. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-15"
        - name: check_out
          in: query
          description: "Date on which the guest will end their stay in the hotel."
          required: true
          type: string
          default: "2016-11-16"
        - name: lang
          in: query
          description: "The preferred language of the content related to each hotel. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "USD"
        - name: chain
          in: query
          description: "Narrows the hotel search to a given hotel provider. The hotel chain is indicated by the first two characters of the property code."
          required: false
          type: string
          default: "6C"
        - name: max_rate
          in: query
          description: "The maximum amount per night that any hotel in the shopping response should cost. This is calculated by dividing the total price of the stay for the given dates by the number of nights specified falling between the check_in and check_out dates."
          required: false
          type: number
          default: 500
        - name: number_of_results
          in: query
          description: "The maximum number of hotels to return in the results set. Hotels are ordered by total price, so if more than the given maximum number of hotels are available, only the cheapest options are returned."
          required: false
          type: integer
          default: 20
        - name: all_rooms
          in: query
          description: "This option if enabled will return all hotel room rates, not just the lowest room rate. Note: This will have an impact on the response time due to the larger messages returned."
          required: false
          type: boolean
          default: false
        - name: show_sold_out
          in: query
          description: This option if enabled will return hotel names and addresses even if rooms are sold out (closed properties)
          required: false
          type: boolean
          default: false
        - name: amenity
          in: query
          description: |
            Hotel <a href="hotels-api-supported-amenities-filter">amenities filter</a> to search narrow down hotels with certain amenities. For example&colon; amenity=POOL. (Note: multiple amenities can be used in searches: amenity=PARKING&amenity=RESTAURANT&amenity=PETS_ALLOWED).
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/HotelSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /hotels/search-box:
    get:
      operationId: Hotel Geosearch by box
      summary: The Hotel Lowest-Price Search API uses Amadeus' fast hotel search engine to locate the cheapest available rooms within a given rectangular region for a given stay period. It's ideal for displaying results on a map.
      description: |
        <p>A fast Hotel shopping API to see which hotels are available in a given area, on a given day and displays their lowest prices. With this API you can find out the price of the cheapest daily rate for all hotels within a specified geographical region.</p>
        
        <p>This API allows you to quickly see the hotel locations in a region, and what prices in that area look like,  as well as the check-in and check-out dates, and get a list of up to 140 properties (names, codes, image, amenities) with their locations and rates. Optional parameters such as currency and maximum rates, amenities or hotel chain codes are also available and can be used to narrow down the results. More optional parameters such as show_sold_out & rooms can be used to show sold out rooms and all available rooms.</p>
                    
        <p>The API is based on our high-speed hotel pricing cache, which is also used to power the <a href="https://hotelsearchengine.amadeus.com/">Amadeus Hotel Search Engine</a> application. Results are returned very quickly, response times are generally under 2s. Our cache has great global coverage and is constantly refreshed with the latest prices.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: south_west_corner
          in: query
          description: The coordinates of the south-west corner of the search box.
          required: true
          type: string
          default: "38.8675,-77.1457"
        - name: north_east_corner
          in: query
          description: The coordinates of the north-east corner of the search box.
          required: true
          type: string
          default: "38.9072,-77.0632"
        - name: check_in
          in: query
          description: "Date on which the guest will begin their stay in the hotel. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-15"
        - name: check_out
          in: query
          description: "Date on which the guest will end their stay in the hotel."
          required: true
          type: string
          default: "2016-11-16"
        - name: lang
          in: query
          description: "The preferred language of the content related to each hotel. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "USD"
        - name: chain
          in: query
          description: "Narrows the hotel search to a given hotel provider. The hotel chain is indicated by the first two characters of the property code."
          required: false
          type: string
          default: "6C"
        - name: max_rate
          in: query
          description: "The maximum amount per night that any hotel in the shopping response should cost. This is calculated by dividing the total price of the stay for the given dates by the number of nights specified falling between the check_in and check_out dates."
          required: false
          type: number
          default: 500
        - name: number_of_results
          in: query
          description: "The maximum number of hotels to return in the results set. Hotels are ordered by total price, so if more than the given maximum number of hotels are available, only the cheapest options are returned."
          required: false
          type: integer
          default: 20
        - name: all_rooms
          in: query
          description: "This option if enabled will return all hotel room rates, not just the lowest room rate. Note: This will have an impact on the response time due to the larger messages returned."
          required: false
          type: boolean
          default: false
        - name: show_sold_out
          in: query
          description: This option if enabled will return hotel names and addresses even if rooms are sold out (closed properties)
          required: false
          type: boolean
          default: false
        - name: amenity
          in: query
          description: |
            Hotel <a href="hotels-api-supported-amenities-filter">amenities filter</a> to search narrow down hotels with certain amenities. For example&colon; amenity=POOL. (Note: multiple amenities can be used in searches: amenity=PARKING&amenity=RESTAURANT&amenity=PETS_ALLOWED).
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/HotelSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /hotels/{property_code}:
    get:
      operationId: Hotel Property Code Search   
      summary: Once you have found your preferred hotel, our Hotel Property Code Search API allows you to quickly find out more room and rate information. It's ideal for displaying results on a map.
      description: |
        <p>This API allows you to quickly see the detailed information of a single hotel, including descriptions, address, GPS location, amenities, awards, lowest priced room and all room prices and booking information. </p>

        <p>This API gives you more information on a specific property. Optional parameters such as show_sold_out & rooms can be used to show sold out rooms and all available rooms. </p>
    
        <p>The API is based on our high-speed hotel pricing cache, which is also used to power the <a href="https://hotelsearchengine.amadeus.com/">Amadeus Hotel Search Engine</a> application. Results are returned very quickly, response times are generally under 2s. Our cache has great global coverage and is constantly refreshed with the latest prices.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: property_code
          in: path
          description: A Hotel property code based on 2 letter chain code + 3 letter <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city + 3 char property unique id.
          required: true
          type: string
          default: "BWDCA133"
        - name: check_in
          in: query
          description: "Date on which the guest will begin their stay in the hotel. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-14"
        - name: check_out
          in: query
          description: "Date on which the guest will end their stay in the hotel."
          required: true
          type: string
          default: "2016-11-15"
        - name: lang
          in: query
          description: "The preferred language of the content related to each hotel. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> for the results
          required: false
          type: string
          default: "USD"
        - name: all_rooms
          in: query
          description: "This option if enabled will return all hotel room rates, not just the lowest room rate. Note: This will have an impact on the response time due to the larger messages returned."
          required: false
          type: boolean
          default: true
        - name: show_sold_out
          in: query
          description: This option if enabled will return hotel names and addresses even if rooms are sold out (closed properties)
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: Valid Lookup Response
          schema:
            $ref: "#/definitions/HotelPropertyResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /cars/search-airport:
    get:
      operationId: Car Rental Airport Search
      summary: The Car Rental API uses Amadeus' classic car service to locate the best available car. Define a circular area with one coordinate and radius, or provide an airport code, as well as the pick-up and drop-off dates, and get a list of car rental providers with their locations and rates. Optional parameters such as currency and rental provider codes are also available and can be used to narrow down the results. This API is an ideal pairing with the flight and hotel search to provide ground transportation options at the destination.
      description: |
        <p>With this API you can find out the price and type of car, for all car rental providers, near a specified airport.</p>

        <p>You can quickly see the locations of car providers near a given airport, and what cars are available to rent, and at what prices. This API is based on our car pricing service that gets live availability from car providers, and is used to power a variety of airline and travel agency websites.</p>
                   
        <p>Results are validated from car providers, and thus response times may take up to 10 seconds (response times are typically about 5s), and the number of concurrent calls is throttled per user to avoid flooding our provider's systems. However, this means the final result is guaranteed to be live and accurate.</p>

        <p>The configuration of this API allows search for car rentals in the rental location where the car is picked up (at the start of the rental), is the same as the one where it will be dropped off.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: location
          in: query
          description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the airport at which the car will be rented.
          required: true
          type: string
          default: "NCE"
        - name: pick_up
          in: query
          description: "Date on which the car rental will be collected from the car rental location. If no time is provided, a default value of 09:00 is used. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-07"
        - name: drop_off
          in: query
          description: "Date at which the car rental will end and the car will be returned to the rental location. If no time is provided, a default value of 17:00 is used."
          required: true
          type: string
          default: "2016-11-08"
        - name: lang
          in: query
          description: "The preferred language of the content related to each car rental. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> to use when displaying prices and rates related to the car rental.
          required: false
          type: string
          default: "USD"
        - name: provider
          in: query
          description: "2 character car rental provider code. You may provide this parameter more than once. "
          required: false
          type: string
          default: "ZI"
        - name: rate_class
          in: query
          description: "Allows to request specific rate types."
          required: false
          type: string
          default: "ALL"
        - name: rate_plan
          in: query
          description: "Qualifies the rate depending on the pickup date and the rental duration."
          required: false
          type: string
          default: "DAILY"
        - name: rate_filter
          in: query
          description: "Defines the types of rates to be returned in the output"
          required: false
          type: string
          default: "ESTIMATED"
          enum: [AVAILABLE, ESTIMATED, ALL]
        - name: vehicle
          in: query
          description: "Specifies the type of vehicle to be rented. If selected, the results set will include only vehicles that match these type descriptions. The enumerations above correspond to ACRISS Pseudo Codes, and you may also provide an ACRISS pseudo code directly. If specifying a vehicle-specific ACRISS code, you may provide this parameter up to 3 times."
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/CarSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /cars/search-circle:
    get:
      operationId: Car Rental Geosearch
      summary: The Car Rental API uses Amadeus' car service to locate the best available car. Define a circular area with one coordinate and radius, or provide an airport code, as well as the pick-up and drop-off dates, and get a list of car rental providers with their locations and rates. Optional parameters such as currency and rental provider codes are also available and can be used to narrow down the results. This API is an ideal pairing with the flight and hotel search to provide ground transportation options at the destination.
      description: | 
        <p>With this API you can find out the price and type of car, for all car rental providers, in a specified geographical location.</p>

        <p>You can quickly see the locations of car providers near a given point, and what cars are available to rent, and at what prices. This API is based on our car pricing service that gets live availability from car providers, and is used to power a variety of airline and travel agency websites.</p>
                   
        <p>Results are validated from car providers, and thus response times may take up to 10 seconds (response times are typically about 5s), and the number of concurrent calls is throttled per user to avoid flooding our provider's systems. However, this means the final result is guaranteed to be live and accurate.</p>

        <p>The configuration of this API allows search for car rentals in the rental location where the car is picked up (at the start of the rental), is the same as the one where it will be dropped off. </p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: latitude
          in: query
          description: Latitude of the center of the search.
          required: true
          type: number
          default: 35.1504
        - name: longitude
          in: query
          description: Longitude of the center of the search.
          required: true
          type: number
          default: -114.57632
        - name: radius
          in: query
          description: Radius around the center to look for hotels in kilometers (km).
          required: true
          type: integer
          default: 42
        - name: pick_up
          in: query
          description: "Date on which the car rental will be collected from the car rental location. If no time is provided, a default value of 09:00 is used. Past availability is not displayed, future availability becomes less useful from about 6 months from the current date."
          required: true
          type: string
          default: "2016-11-07"
        - name: drop_off
          in: query
          description: "Date at which the car rental will end and the car will be returned to the rental location. If no time is provided, a default value of 17:00 is used."
          required: true
          type: string
          default: "2016-11-08"
        - name: lang
          in: query
          description: "The preferred language of the content related to each car rental. Content will be returned in this language if available."
          required: false
          type: string
          default: "EN"
        - name: currency
          in: query
          description: The preferred <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> to use when displaying prices and rates related to the car rental.
          required: false
          type: string
          default: "USD"
        - name: provider
          in: query
          description: "2 character car rental provider code. You may provide this parameter more than once. "
          required: false
          type: string
          default: "ZI"
        - name: rate_class
          in: query
          description: "Allows to request specific rate types."
          required: false
          type: string
          default: "ALL"
        - name: rate_plan
          in: query
          description: "Qualifies the rate depending on the pickup date and the rental duration."
          required: false
          type: string
          default: "DAILY"
        - name: rate_filter
          in: query
          description: "Defines the types of rates to be returned in the output"
          required: false
          type: string
          default: "ESTIMATED"
          enum: [AVAILABLE, ESTIMATED, ALL]
        - name: vehicle
          in: query
          description: "Specifies the type of vehicle to be rented. If selected, the results set will include only vehicles that match these type descriptions. The enumerations above correspond to ACRISS Pseudo Codes, and you may also provide an ACRISS pseudo code directly. If specifying a vehicle-specific ACRISS code, you may provide this parameter up to 3 times."
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/CarSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /rail-stations/autocomplete:
    get:
      operationId: Rail-Station Autocomplete
      summary: Use the Rail Station Autocomplete API to transform user input into a unique rail station code.
      description:  |
        <p>Given the start of any word in a rail station's official name, as a term, this API provides the full name and rail station ID of a rail station for use in searches. The response provides an array of up to 20 possible matches, sorted by passenger traffic, in a JQuery Autocomplete compatible format.</p>

        <p>The value returned is the UIC station code. The label returned is always in UTF-8 format, with the station's official name (which is often in the native language). Agglomeration station codes may also be returned.</p>

        <p>Note that only French and Italian rail stations are supported by the Rail Station Autocomplete API</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: term
          in: query
          description: Search term that should represent some part of a station name. Not case sensitive, may be blank.
          required: true
          type: string
          default: "Mi"
      responses:
        200:
          description: Valid Search Response
          schema:
            type: array
            items:
              $ref: "#/definitions/RailStationAutocompleteResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /rail-station/{id}:
    get:
      operationId: Rail-Station Information
      summary: This service retrieves the rail station information corresponding to an Amadeus UIC rail station ID. Currently only French and Italian stations are supported.
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: id
          in: path
          description: Station ID for which further information is required.
          required: true
          type: string
          default: "8301700"
      responses:
        200:
          description: Valid Station Lookup Response
          schema:
            $ref: "#/definitions/RailStationResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /trains/extensive-search:
    get:
      operationId: Train Extensive Search
      summary:  Our instant extensive train search will provide you with multi-day availability and a variety of schedule and pricing options to travel to your destination.
      description:  |
        <p>This API allows you to search trains availability and prices for a single day or date range. It's based on our Rail Instant Search technology, providing you with immediate results from our rail search cache.</p>

        <p>This API has content from SNCF (French trains).</p>
                    
        <p>The content is also restricted to single-leg trips - where a single train takes you directly from the origin to the destination.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin
          in: query
          description: Identifier of the rail station from which you would like to depart.
          required: true
          type: string
          default: "7171801"
        - name: destination
          in: query
          description:  Identifier of the rail station to which you would like to travel.
          required: true
          type: string
          default: "8768600"
        - name: departure_date
          in: query
          description: The date or range of dates on which you would like to depart from the origin station to go to the destination.
          required: true
          type: string
          default: "2016-07-14"
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/ExtensiveTrainSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /trains/schedule-search:
    get:
      operationId: Train Schedule Search
      summary: The train schedule search can suggest destinations from your chosen departure station
      description:  |
        <p>This API allows you to find all the possible destinations in the Rail Instant Search cache (used by Extensive Search above) from a given origin station on a given day. You can use this to help build network maps, journey planners or provide inspiration for rail travel.</p>

        <p>This API has continuous content from <a href="http://www.sncf.com/">SNCF</a>.<br />
        All the options returned are single-leg trips - where a single train takes you directly from the origin to the destination. In general, only departure dates up to 90 days in the future are supported</p>

        <p>Currently agglomeration stations are not supported</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: origin 
          in: query
          description: Identifier of the rail station where you would like to depart from.
          required: true
          type: string
          default: "7171801"
        - name: departure_date
          in: query
          description: The date on which you would like to depart from the origin station to go to the destination.
          required: true
          type: string
          format: date
          default: "2016-07-14"
      responses:
        200:
          description: Valid Search response
          schema:
            $ref: "#/definitions/TrainScheduleSearchResponse"
        default:
          description: Client or server error response
          schema:       
            $ref: "#/definitions/Error"
  /travel-record/{record_locator}:
    get:
      operationId: Travel Record Retrieve
      summary: "Amadeus has one of the world's largest repositories of travel records. Enable travelers to explore the details of their journeys stored in the Amadeus system using our Retrieve Travel Record API."
      description: |
        <p>Note: This API requires the use of HTTPS</p>

        <p>This service retrieves a travel record (also sometimes referred to as a PNR) for a given journey when provided with Record Locator to identify a travel record, along with the last name of any traveler who is marked as a passenger on this record.</p>

        <p>The API provides detailed information on a given record, including any air, car, hotel or rail reservations, as well as passenger details, and contact frequent traveler information for each passenger when available. You can use this to provide a wide variety of pre-trip or in-trip services.</p>

        <p>Note that this API transmits sensitive personal data about a traveler's journey. We work hard to ensure that we comply with all the legal requirements this entails, and as an application owner, you need to do so too - we don't want you to get in trouble! This paragraph, or anything else in our documentation, does not constitute legal advice, it's just to give you an idea of some of the potential issues that you may encounter. Please check your legal obligations regarding the use of this data before implementing this API</p>

        <p>In most countries, the data in the returned travel record is considered to be the property of the traveler. In order to ensure that you are acting on behalf of the traveler, we require you to provide the traveler's last name in addition to the record locator when you make a call to this API. You should ensure that you have consent from the traveler before retrieving this record, in some countries this is a legal requirement - please respect this appropriately.</p>

        <p>Our data center is based in Europe, so there is a legal requirement that you to access this API over a secure connection. If you plan to store the information returned by this API, ensure you comply with storage requirements for European data, in addition to those of your local country. For example, there are strict requirements on the caching of retrieved travel records, so please ensure the cache control HTTP headers in the response are respected.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: record_locator 
          in: path
          description: The Amadeus identifier of the given travel record. Usually printed at the top of an itinerary or boarding pass.
          required: true
          type: string
          default: "YB8SPK"
        - name: last_name
          in: query
          description: The last name of any traveler in this record, as written on their identification used for travel. This is required to ensure that applications retrieving the record are acting on behalf of the customer.
          required: true
          type: string
          default: "LOPEZ"
        - name: env
          in: query
          description: Indicates the Amadeus system from which this record should be retrieved.
          type: string
          default: "TEST"
      responses:
        200:
          description: Valid Travel Record
          schema:
            $ref: "#/definitions/TravelRecordResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /travel-intelligence/top-destinations:
    get:
      operationId: Top Flight Destinations
      summary: The Top Flight Destinations API lets you find the most popular flight destinations from an origin during a period. This can help you answer questions like "Where are most people going to from Paris during the month of September?" 
      description: |
        <p>The Top Flight Destinations API lets you find the most popular flight destinations from an origin during a period. This can help you answer questions like "Where are most people from Paris going to during the month of September?" The API is based on estimated flight traffic summary data from two journey points over a specific period. It returns up to 50 results, ordered by popularity, showing number of travelers as well as number of flights.</p>
       
        <p>This estimated search is based on Amadeus' Travel Intelligence Engine, a high performance scalable cloud-based platform, born in the age of Big Data and purposely built for the industry bringing total flexibility and speed to business intelligence for travel. Please see <a href="http://www.amadeus.com/travelintelligence">amadeus.com/travelintelligence</a> for more information.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: period
          in: query
          description: "Period, in month of the year (YYYY-MM), when consumers are traveling. Only periods from 2011-01 up to previous month of the current year are valid. Future dates are not supported."
          required: true
          type: string
          default: "2015-09"
        - name: origin
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city from which the traveler will depart. 
          required: true
          type: string
          default: "BOS"
        - name: number_of_results
          in: query
          description: "The maximum number of destinations to return in the results set. Destinations are ordered by number of travelers. The maximum number of destinations returned is 50"
          required: false
          type: integer
          default: 10
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/TopDestinationsSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /travel-intelligence/top-searches:
    get:
      operationId: Top Flight Searches
      summary: The Top Flight Searches API lets you find the most popular flight searches from an origin in a during given search period. This can help you answer questions like "Where are people looking to travel from Paris during the month of September?" 
      description: |
          <p>The Top Flight Search allows you to find number of estimated searches from an origin, optionally a destination, within a time period when travelers are performing the searches.</p> 
          <p>The search is based on queries performed from within a country (also refers to as market) and returns up to 50 results, ordered by popularity, showing number of searches for most searched destination with its previous year comparison. This search also shows patterns on how travelers are searching for flights, revealing where, when and for how long they’re planning to travel. See
          <ul><li>Trip Durations(How long are the trips planned for?) and</li>
          <li> Advance Search Period (How long before departures do travelers start searching for their trips?)</li>
          </ul></p>
          <p>This estimated search is based on Amadeus' Travel Intelligence Engine, a high performance scalable cloud-based platform, born in the age of Big Data and purposely built for the industry bringing total flexibility and speed to business intelligence for travel. Please see <a href="http://www.amadeus.com/travelintelligence">amadeus.com/travelintelligence</a> for more information.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: period
          in: query
          description: "Period of date (month or year) when consumers are searching to travel. Use YYYY-MM for month or YYYY for year. Only periods from year 2011-01 up to current year, previous month are valid. Future dates are not supported."
          required: true
          type: string
          default: "2015-09"
        - name: origin
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city from which the traveler will depart. 
          required: true
          type: string
          default: "BOS"
        - name: destination
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going
          required: false
          type: string
          default: "LON"
        - name: country
          in: query
          description: "2-letter IATA country code of the country where the search queries originates from."
          required: true
          type: string
          default: "US"
        - name: number_of_results
          in: query
          description: "The maximum number of destinations to return in the results set. Destinations are ordered by number of searches. The maximum number of destinations returned is 50"
          required: false
          type: integer
          default: 10
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/TopSearchesSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /travel-intelligence/flight-traffic:
    get:
      operationId: Flight Traffic API
      summary: The Flight Traffic API lets you find the true origin and destination traffic summary between two journey points over a specified period. This can help you answer questions like "What cities are people coming from to visit Los Angeles between January through April of 2015" 
      description: |
        <p>The Flight Traffic API lets you find the origin and destination traffic summary between two journey points over a specified period.</p>
        <p>The search returns number of flights & travelers for each origin and destination, ordered by popularity, for each month specified within the search period. This search can help you answer questions like "Where are people from Los Angeles traveling to between January and April of 2015?" or "Which is the most popular month for New Yorkers to travel last year?". </p>
        <p>This search is based on Amadeus' Travel Intelligence Engine, a high performance scalable cloud-based platform, born in the age of Big Data and purposely built for the industry bringing total flexibility and speed to business intelligence for travel. Please see <a href="http://www.amadeus.com/travelintelligence">amadeus.com/travelintelligence</a> for more information.</p>
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: period
          in: query
          description: "Range of periods for which flight traffic information is required. Ranges are inclusive and ranges of months will apply from the start to the end of the month. If just a single period is specified, only that period will be displayed. Only periods from 2011-01 up to previous month of the current year are valid. Future periods are not supported."
          required: true
          type: string
          default: "2014-09--2014-10"
        - name: origin
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city from which the traveler will depart. 
          required: true
          type: string
          default: "BOS"
        - name: destination
          in: query
          description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city to which the traveler is going. 
          required: false
          type: string
          default: "LAX"
        - name: number_of_results_per_period
          in: query
          description: "The maximum number of destinations to return for each period. Destinations are ordered by dates and number of travelers. The maximum number of destinations per period returned is 50"
          required: false
          type: integer
          default: 5
      responses:
        200:
          description: Valid Search Response
          schema:
            $ref: "#/definitions/FlightTrafficSearchResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"
  /points-of-interest/yapq-search-text:
    get:
      operationId: YapQ City Name Search
      summary: Use YapQ's Point of Interest service to find landmarks and attractions in a given city.
      description: |
         Amadeus has partnered with <a href="http://yapq.io/">YapQ</a> to bring you point of interest APIs with the goal of offering you unbiased ratings of landmarks and tourist attractions. YapQ rates these points according to their interest on social media and provides Wikipedia content and Geonames ID in a given city. <br />
         YapQ's service indexes millions of points around the world, and provides content in 12 different languages. This allows you to ensure you catch the <em>must-see</em> sights in a <a href="http://yapq.io/cities.html">YapQ supported city</a>.<br />
         Each point of interest comes with links to content, grading information, location and directions to help make discovering your destination easy and fun.<br /><br />
         This service is still under active development, and the response format may change without warning. We'd be interested in your feedback - <a href="mailto:sandbox@yapq.com">send us an email</a>.
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: city_name
          in: query
          description: The name of the <a href="http://yapq.io/cities.txt">supported city</a> for which you are searching, in the selected language. 
          required: true
          type: string
          default: "Tel Aviv"
        - name: lang
          in: query
          description: The preferred language of the content related to each point of interest. Content will be returned in this language if available
          required: false
          type: string
          enum: [DE, EN, ES, FR, HE, IT, JA, KO, NL, PL, RU, ZH]
          default: "EN"
        - name: category
          in: query
          description: Filters the resulting points_of_interest to include only results which have a least one category containing the given provided word. Good examples are <em>museum</em>, <em>landmark</em> or <em>church</em>
          required: false
          type: string
          default: "Museum"
        - name: geonames
          in: query
          description: Setting this to true includes only points of interest with a geonames ID
          required: false
          type: boolean
          default: false
        - name: vibes
          in: query
          description: Includes content that doesn't correspond to an active physical place, but which gives the user some background information, or <em>vibe</em> for the place they are visiting. An example of this may be information on an influential demolished building that used to exist at a certain location, or more information on a district of the city
          required: false
          type: boolean
          default: false
        - name: social_media
          in: query
          description: Enabling this includes images from Instagram in the output results. This is disabled by default, since these images are often just pictures of people or food, which often have little relevance to the actual location
          required: false
          type: boolean
          default: false
        - name: image_size
          in: query
          description: The size of the images you'd like to see in the response
          required: false
          type: string
          enum: [SMALL, MEDIUM, LARGE, HD]
          default: MEDIUM
        - name: number_of_images
          in: query
          description: Number of images to display
          required: false
          type: integer
          default: 4
        - name: number_of_results
          in: query
          description: "The maximum number of points of interest to return in the results set. This is a range from 1 to 100"
          required: false
          type: integer
          default: 20
      responses:
        200:
          description: Valid Points of Interest Response from YapQ
          schema:
            $ref: "#/definitions/PointsOfInterestResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"

  /points-of-interest/yapq-search-circle:
    get:
      operationId: YapQ Geosearch
      summary: Use YapQ's Point of Interest service to find landmarks and attractions near a given point.
      description: |
         Amadeus has partnered with <a href="http://yapq.io/">YapQ</a> to bring you point of interest APIs with the goal of offering you unbiased ratings of landmarks and tourist attractions. YapQ rates places according to their interest on social media and provides Wikipedia content and Geonames ID at a given location. <br />
         YapQ's service indexes millions of points around the world, and provides content in 12 different languages. This allows you to ensure you catch the <em>must-see</em> sights at a specific <a href="http://yapq.io/cities.html">YapQ supported location</a>.<br />
         Each point of interest comes with links to content, grading information, location and directions to help make discovering your destination easy and fun.<br /><br />
         This service is still under active development, and the response format may change without warning. We'd be interested in your feedback - <a href="mailto:sandbox@yapq.com">send us an email</a>.
      parameters:
        - name: apikey
          in: query
          description: API Key provided for your account, to identify you for API access. Make sure to keep this API key secret.
          required: true
          type: string
        - name: latitude
          in: query
          description: Latitude of the center of the search, in decimal degrees
          required: true
          type: number
          default: 35.1504
        - name: longitude
          in: query
          description: Longitude of the center of the search, in decimal degrees
          required: true
          type: number
          default: -114.57632
        - name: radius
          in: query
          description: Radius around the center to look for points-of-interest around the given latitude and longitude in kilometers (km)
          required: true
          type: integer
          default: 42
        - name: lang
          in: query
          description: The preferred language of the content related to each point of interest. Content will be returned in this language if available
          required: false
          type: string
          enum: [DE, EN, ES, FR, HE, IT, JA, KO, NL, PL, RU, ZH]
          default: "EN"
        - name: category
          in: query
          description: Filters the resulting points_of_interest to include only results which have a least one category containing the given provided word. Good examples are <em>museum</em>, <em>landmark</em> or <em>church</em>
          required: false
          type: string
          default: "Museum"
        - name: geonames
          in: query
          description: Setting this to true includes only points of interest with a geonames ID
          required: false
          type: boolean
          default: false
        - name: vibes
          in: query
          description: Includes content that doesn't correspond to an active physical place, but which gives the user some background information, or <em>vibe</em> for the place they are visiting. An example of this may be information on an influential demolished building that used to exist at a certain location, or more information on a district of the city
          required: false
          type: boolean
          default: false
        - name: social_media
          in: query
          description: Enabling this includes images from Instagram in the output results. This is disabled by default, since these images are often just pictures of people or food, which often have little relevance to the actual location
          required: false
          type: boolean
          default: false
        - name: image_size
          in: query
          description: The size of the images you'd like to see in the response
          required: false
          type: string
          enum: [SMALL, MEDIUM, LARGE, HD]
          default: MEDIUM
        - name: number_of_images
          in: query
          description: Number of images to display.
          required: false
          type: integer
          default: 4
        - name: number_of_results
          in: query
          description: "The maximum number of points of interest to return in the results set. This is a range from 1 to 100"
          required: false
          type: integer
          default: 20
      responses:
        200:
          description: Valid Points of Interest Response from YapQ
          schema:
            $ref: "#/definitions/PointsOfInterestResponse"
        default:
          description: Client or server error
          schema:
            $ref: "#/definitions/Error"

definitions:
  Error:
    required:
      - status
      - message
    properties:
      status:
        type: integer
      message:
        type: string
      more_info:
        type: string
  ExtremeSearchResponse:
    required:
      - origin
      - currency
      - results
    properties:
      origin:
        type: string
        description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>
      currency:
        type: string
        description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code.
      results:
        type: array
        items:
          $ref: "#/definitions/ExtremeSearchResult"
  ExtremeSearchResult:
     required:
        - destination
        - price
     properties:
      destination:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city or airport to which the traveler may go, from the provided origin
      departure_date:
        type: string
        format: date
        description: The date departure at the origin, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd, to go to the above destination
      return_date:
        type: string
        format: date
        description: The date at which the flight from the destination to the origin will depart from the destination. The date is in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd, in the local date of the origin. This field will not be present in the response if the one-way request parameter is set to true.
      price:
        type: string
        description: "The minimum total price for one adult passenger for a round trip from the origin to the destination and back. Always a string, formatted correctly for the provided currency"
      airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is responsible for selling the traveler this flight - also known as the Validating Carrier. Airlines are specified using <a href="https://en.wikipedia.org/wiki/Airline_codes"><a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a>s</a>
  LowFareSearchResponse:
     required:
        - currency
     properties:
      currency:
        type: string
        description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code.
      results:
        type: array
        items:
          $ref: "#/definitions/LowFareSearchResult"
  LowFareSearchResult:
     required:
        - fare
     properties:
      itineraries:
        type: array
        items:
          $ref: "#/definitions/FlightSearchItinerary"
      fare:
        description: "The price and fare information which applies to all itineraries in this response"
        $ref: "#/definitions/FlightSearchPrice"     
  FlightSearchItinerary:
     required:
        - outbound
     properties:
      outbound:
        description: "The bound container for the flight information for bringing the traveler from the origin airport to the destination airport"
        $ref: "#/definitions/FlightSearchBound"
      inbound:
        description: "The bound container for the flight information for bringing the traveler from the destination airport to the origin airport"
        $ref: "#/definitions/FlightSearchBound"
  FlightSearchBound:
     required:
        - flights
     properties:
      flights:
        type: array
        items:
          $ref: "#/definitions/FlightSearchSegment"
      duration:
        type: string
        description: "The duration of this bound, including layover time, expressed in the format hh:mm"
  FlightSearchSegment:
     required:
        - departs_at
        - arrives_at
        - origin
        - destination
        - marketing_airline
        - operating_airline
        - flight_number
        - booking_info
     properties:
      departs_at:
        type: string
        description: Date and time of departure at the origin, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the origin airport
      arrives_at:
        type: string
        description: Date and time of departure at the destination, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the destination airport
      origin:
        description: "Information on the origin airport, from which this flight departs"
        $ref: "#/definitions/Airport"
      destination:
        description: "Information on the destination airport, at which this flight arrives"
        $ref: "#/definitions/Airport"       
      marketing_airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is responsible for the traveller this flight 
      operating_airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.
      flight_number:
        type: string
        description: "The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft's flight"
      aircraft:
        type: string
        description: The <a href="http://www.jacanaent.com/JacTechLib/07Aviation/AircraftTypeCodes.txt">IATA aircraft type designator</a> of aircraft that will be used for this flight
      booking_info:
        description: "A booking information object with additional details about how the quality of this flight at the given price."
        $ref: "#/definitions/FlightSearchBookingInfo"
  Airport:
     required:
        - airport
     properties:
      airport:
        type: string
        description: The 3 character <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA airport code</a> of the airport in question for this flight
      terminal:
        type: string
        description: "The terminal identifier at which this flight will arrive or depart in the given airport"
  FlightSearchBookingInfo:
     required:
        - travel_class
        - booking_code
        - seats_remaining
     properties:
      travel_class:
        type: string
        description: The cabin class offered on this flight. An enumeration that will read either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST
      cabin_code:
        type: string
        description: A single character encoding of the travel_class, generally only available on responses from affiliates.
      booking_code:
        type: string
        description: "The Reservation Booking Designator code that determines the quality and terms of the flight offered for the given price. A single letter from A..Z"
      seats_remaining:
        type: string
        description: "The minimum number of seats that are still available for this price at the time of search. If the value is a 4 or above, there are often more than this number of seats still available."
      fare_family:
        type: string
        description: Enumeration of the type of fare which this airline is providing, eg. VALUE. This is generally only available for affiliate responses.
      fare_basis:
        type: string
        description: See https://en.wikipedia.org/wiki/Fare_basis_code for the fare being offered.
  FlightSearchPrice:
     required:
        - total_price
        - price_per_adult
        - restrictions
     properties:
      total_price:
        description: The total price for all the requested passengers for this flight
        type: string
      price_per_adult:
        description: "The per-passenger fare for each adult on this flight"     
        $ref: "#/definitions/Fare"
      price_per_child:
        description: "The per-passenger fare for each child on this flight"     
        $ref: "#/definitions/Fare"
      price_per_infant:
        description: "The per-passenger fare for each infant on this flight"        
        $ref: "#/definitions/Fare"
      restrictions:
        description: The restrictions associated with this fare
        $ref: "#/definitions/FareRestrictions"
  FareRestrictions:
     required:
        - refundable
        - change_penalties
     properties:
      refundable:
        type: boolean
        description: Indicates whether this fare is refundable under some circumstances. Note that a refund charge or penalty may apply
      change_penalties:
        type: boolean
        description: Indicates whether this fare allows the itinerary to be changed under some circumstances. Note that a change fee or penalty may apply
  Fare:
     required:
        - total_fare
        - tax
     properties:
      total_fare:
        type: string
        description: The total price, including taxes per-passenger, for this passenger type, for this itinerary. Always a string, formatted correctly for the given currency
      tax:
        type: string
        description: "The tax applied per-passenger, for this passenger type, for this itinerary. Some of this tax may be refundable in the event of cancellation."
  AirportAutocompleteResponse:
     required:
        - value
        - label
     properties:
      value:
        type: string
        description: The 3 letter IATA location code of the given city or airport. You can use this as an input parameter for a flight low-fare or inspiration search.
      label:
        type: string
        description: The name of this airport, in UTF-8 format, prefixed with the name of the city if it is not already incorporated in the name of the airport, and appended with the location's <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> (as in value), enclosed in square brackets.
  RailStationAutocompleteResponse:
     required:
        - value
        - label
     properties:
      value:
        type: string
        description: The unique identifier of the station. You can use this as an input parameter for a rail search.
      label:
        type: string
        description: The full name of the station, in UTF-8 format.
  LocationResponse:
     properties:
      city:
        description: Information for any <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city which corresponds to the provided code
        $ref: "#/definitions/CityInformation"
      airports:
        description: Information for any IATA airport located in the provided <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city or which corresponds to the provided code
        type: array
        items:
          $ref: "#/definitions/AirportInformation"        
  CityInformation:
     required:
        - code
        - geonames_ID
        - name
        - country
        - location
        - timezone
     properties:
      code:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of this city. If you intend to make a flight search from the output of this call, I recommend using this as your input parameter as it generally gives the best results.
      geonames_ID:
        type: string
        description: The ID of this city in the open-sourced Geonames DB  
      name:
        type: string
        description: The name of this city, in English
      state:
        type: string
        description: The state code of this city, if applicable  
      country:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a> in which this city can be found. 
      location:
        description: "This city's approximate geolocation. The exact center of a city is often not an exact location, so be aware that this might not be exact."        
        $ref: "#/definitions/Geolocation" 
      timezone:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/List_of_tz_database_time_zones">Olson format</a> name of the timezone in which this city is located 
      currency:
        type: string
        description: The ISO-4217 currency code of the official local currency at this location 
  AirportInformation:
     required:
        - code
        - name
        - city_code
        - city_name
        - country
        - location
        - timezone
     properties:
      code:
        type: string
        description:    The 3 letter IATA airport code of this given airport. You can use this as an input parameter for a low-fare flight search, to get more specific results than the city code, but inspiration search works best using the city code.
      name:
        type: string
        description: The name of this airport, in UTF-8 format
      city_code:
        type: string
        description: The three letter <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city of the city in which this airport is located.
      city_name:
        type: string
        description: The English name of the city in which this airport is located
      state:
        type: string
        description: The state code of this city, if applicable  
      country:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a> in which this city can be found. 
      location:
        description: "  An object containing the longitude and latitude of the given airport."      
        $ref: "#/definitions/Geolocation"
      aircraft_movements:
        type: integer
        description: The annual number of aircraft movements at that airport. 
      timezone:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/List_of_tz_database_time_zones">Olson format</a> name of the timezone in which this airport is located
  NearestAirport:
     required:
        - airport
        - airport_name
        - city
        - city_name
        - location
        - distance
        - timezone
     properties:
      airport:
        type: string
        description:    The 3 letter IATA airport code of this given airport. You can use this as an input parameter for a low-fare flight search, to get more specific results than the city code, but inspiration search works best using the city code.
      airport_name:
        type: string
        description: The name of this airport, in UTF-8 format
      city:
        type: string
        description: The three letter <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city of the city in which this airport is located.
      city_name:
        type: string
        description: The English name of the city in which this airport is located
      state:
        type: string
        description: The state code of this city, if applicable  
      distance:
        type: number
        description: The distance in km from the point specified in the query, to this location 
      location:
        description: "  An object containing the longitude and latitude of the given airport."      
        $ref: "#/definitions/Geolocation"
      aircraft_movements:
        type: integer
        description: The annual number of aircraft movements at that airport. 
      timezone:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/List_of_tz_database_time_zones">Olson format</a> name of the timezone in which this airport is located
  Geolocation:
     required:
        - latitude
        - longitude
     description: An object to describe the coordinates of a map location    
     properties:
      latitude:
        type: number
        description: The north-south coordinate of this location, in decimal degrees, between -90 and 90
      longitude:
        type: number
        description: The east-west coordinate of this location, in decimal degrees, between -180 and 180
      google_maps_link:
        type: string
        description: For YapQ APIs only  - a link to a google map rendering of this location.
  HotelSearchResponse:
     properties:
      results:
        type: array
        items:
          $ref: "#/definitions/HotelPropertyResponse"
  HotelPropertyResponse:
     required:
        - property_code
        - property_name
        - location
        - total_price
        - min_daily_rate
     properties:
      property_code:
        type: string
        description: The 8 character property code of this given hotel. The first 2 characters of this code are the chain code that can be specified in the input. The remaining elements are proprietary to each hotel chain.
      property_name:
        type: string
        description: The name of this hotel.
      location:
        $ref: "#/definitions/Geolocation"
      address:
        $ref: "#/definitions/Address"
      total_price:
        description: The lowest price of a stay, from the given check in date to the given check out date.
        $ref: "#/definitions/Amount"
      min_daily_rate:
        description: The lowest price per day that the hotel offers between the given check-in and check-out dates. Extra taxes may apply to this rate.
        $ref: "#/definitions/Amount"        
      contacts:
        type: array
        description: An array of contact objects to tell the user how to contact the hotel. Typically includes a phone and fax number
        items:
          $ref: "#/definitions/Contact"
      amenities:
        type: array
        description: |
                    An array of amenity objects to the user what facilities this hotel might provide, such as a pool or parking. 
                    If this array is empty, it does not necessarily mean that there are no amenities available at this hotel, it could also mean that the hotel does not list their amenities in our search!
        items:
          $ref: "#/definitions/Amenity"
      awards:
        type: array
        description: An array of hotel award objects to give the user an expectation of the service quality at this hotel. This can be used to indicate, for example, the star rating of a hotel. If this array is empty, it does not necessarily mean that the hotel has no awards, it could simply mean that they didn't tell us about them!
        items:
          $ref: "#/definitions/Award"
      images:
        type: array
        description: 'A selection of image objects, showing pictures of the hotel building, the entrance or some rooms, to give an indication of what to expect at this hotel. Note that redistribution of images outside Amadeus products requires licensing from our image providers: Leonardo and Ice Portal. Thus image links are returned for whitelisted Amadeus users only.'
        items:
          $ref: "#/definitions/Image"       
      rooms:
        type: array
        description: Information on currently available rooms at this hotel.
        items:
          $ref: "#/definitions/HotelRoom" 
      more_rooms_at_this_hotel:
        description: Provides a ready-to-use link to make a follow up request to find more available rooms at this hotel
        $ref: "#/definitions/Link"
  Address:
     required:
        - line1
        - city
        - country
     description: An object to describe a postal address.
     properties:
      line1:
        type: string
        description: The first line of this place's address. Generally represents the basic street address.
      city:
        type: string
        description: The town or city in which place is located.
      region:
        type: string
        description: The state or region code in which the place is located.
      postal_code:
        type: string
        description: The postal or zip code of this address.
      country:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a> country code of this address.  
  Contact:
     required:
        - type
        - detail
     properties:
      type:
        type: string
        description: The method of contact, such as phone or fax.
      purpose:
        type: string
        description: "The reason or channel of that contact method. For example&colon; HOME, EMERGENCY, MOBILE."
      detail:
        type: string
        description: How that contact should be used, eg. a phone number
  Amenity:
     properties:
      amenity:
        type: string
        description: <a href="hotels-api-supported-amenities-filter">The amenity code</a>
      ota_code:
        type: string
        description: The <a href="http://www.opentravel.org/">Open Travel Alliance</a> <a href="ota-hotel-amenity-code-table">Hotel Amenities Code</a> for this amenity.
      description:
        type: string
        description: The decoded text description for this amenity code, where available.
  Award:
     required:
        - provider
        - rating
     properties:
      provider:
        type: string
        description: The organization that issued the award. For example&colon;. Local Star Rating, AAA.
      rating:
        type: string
        description: "The level of the award that was awarded on the provider's scale. For example&colon; 4 or RECOMMENDED."
  Image:
     required:
        - url
     properties:
      category:
        type: string
        description: The enumerated category of this image type. Common values include EXTERIOR, GUEST_ROOM, SUITE, LOBBY, RESTAURANT, LOUNGE, LOGO, MAP, MISC and UNKNOWN.
      width:
        type: integer
        description: The pixel width of the image at the provided URL.
      height:
        type: integer
        description: The pixel height of the image at the provided URL.
      url:
        type: string
        description: The URL of the hotel image of this given category and size, for display.
  HotelRoom:
     required:
        - booking_code
     properties:
      booking_code:
        type: string
        description: The booking code identifies a product at the hotel. It can be used to book a room.
      room_type_code:
        type: string
        description: A 3-letter code to identify a specific room type.
      rate_plan_code:
        type: string
        description: A 3 letter code to designate different rates base on traveler type.
      total_amount:
        description: The total price of staying in this room from the given check-in date to the given check-out date
        $ref: "#/definitions/Amount"
      rates:
        description: The total price of staying in this room from the given check-in date to the given check-out date
        type: array
        items:
          $ref: "#/definitions/PeriodRate"
      descriptions:
        type: array
        description: An array of description strings describing room and rate types features
        items:
          type: string    
      room_type_info:
        $ref: "#/definitions/RoomInfo"  
      rate_type_code:
        type: string
        description: The unique rate code used by the hotel chain to price this room's rate
  RoomInfo:
     description: More detailed structured information about the room.
     required:
       - bed_type
       - number_of_beds
       - room_type
     properties:
      bed_type:
        description: The type of bed or beds in the room, such as Double, or King.
        type: string
      number_of_beds:
        description: The number of beds in the room. May be an integer or a free-text dessciption, as provided by the hotel
        type: string
      room_type:
        description: Free-text indicating the type of room - such Smoking, No Smoking, Suite, etc..
        type: string
  Amount:
     required:
        - currency
        - amount
     description: A monetary amount with a price and a currency
     properties:
      currency:
        type: string
        description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code.
      amount:
        type: string
        description: "Total amount in the given currency, formatted appropriately. For example&colon; 194.99"
  PeriodRate:
     required:
        - start_date
        - end_date
        - currency
        - price
     properties:
      start_date:
        type: string
        format: date
        description: The start date of this rate, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd.
      end_date:
        type: string
        format: date
        description: The date on which this rate ends, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd.
      currency:
        type: string
        description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> currency code of this rate.
      price:
        type: number
        description: "Total amount in the given currency per day of this rate, formatted appropriately. For example&colon; 194.99."
  Link:
     required:
        - href
     properties:
       href:
         description: Hyperlink reference URL to the target
         type: string
  CarSearchResponse:
     properties:
      results:
        type: array
        items:
          $ref: "#/definitions/CarSearchResult"
  CarSearchResult:
     required:
        - provider
     properties:
      provider:
        description: Details of the car company offering this rental.
        $ref: "#/definitions/Company"
      location:
        description: This car rental company's approximate geolocation. The exact quality of this parameter depends on the provider but it's usually quite accurate.
        $ref: "#/definitions/Geolocation"
      airport:
        type: string
        description:  The exact quality of this parameter depends on the provider but it's usually quite accurate.
      cars:
        type: array
        description: Further details about each of the vehicles offered by this car rental provider.
        items:
          $ref: "#/definitions/Vehicle"
  Company:
     required:
        - company_code
        - company_name
     properties:
      company_code:
        type: string
        description: "The Amadeus 2-character company code of this provider."
      company_name:
        type: string
        description: "The long name of the provider corresponding to the above code."
  Vehicle:
     required:
        - vehicle_info
     properties:
      vehicle_info:
        description: More information about the type of vehicle on offer.
        $ref: "#/definitions/VehicleInfo"
      rates:
        description: Rates that will be applied during the duration of the car rental requested. These rates are generally not inclusive of tax and are used by the car rental company to compute the total cost at the end of the rental period.
        type: array
        items:
          $ref: "#/definitions/Rate"
      estimated_total:
        description:    The estimated total cost of the rental given the rental period and location provided, including all mandatory taxes and charges, and using a default set of rental options and restrictions defined by the car company.
        $ref: "#/definitions/Amount"
      image:
        description: An image to give an indication of what to expect when renting this vehicle.
        $ref: "#/definitions/Image"
  VehicleInfo:
     required:
        - acriss_code
        - category
     properties:
      acriss_code:
        type: string
        description: The 4 letter <a href="http://en.wikipedia.org/wiki/ACRISS_Car_Classification_Code">ACRISS code</a> that defines the properties of vehicle being rented.
      category:
        type: string
        description: "The decoded ACRISS vehicle category (For example&colon; Economy, Luxury, Standard)."
      type:
        type: string
        description: "The decoded ACRISS vehicle type, to let you know what kind of vehicle this is (For example&colon; Van, SUV, Pickup)."
      transmission:
        type: string
        description: "The decoded ACRISS transmission type, to let you know if this vehicle is Automatic or Manual Transmission (stick-shift)."
      air_conditioning:
        type: boolean
        description: "The decoded ACRISS air_conditioning information, to let you know if this vehicle has air conditioning"
      fuel:
        type: string
        description: "The decoded ACRISS fuel type, to let you know if this vehicle is hybrid, electric, etc."
  Rate:
     required:
        - type
        - price
     properties:
      type:
        type: string
        description: "The type or applicability period of rate being applied. For example&colon; DAILY, WEEKLY, WEEKEND." 
      price:
        description: "The long name of the provider corresponding to the above code."
        $ref: "#/definitions/Amount"
  ExtensiveTrainSearchResponse:
     properties:
      results:
        type: array
        items:
          $ref: "#/definitions/ExtensiveTrainSearchResult"
  ExtensiveTrainSearchResult:
     required:
        - origin
        - destination
        - itineraries
     properties:
      origin:
        description: Station object with details about the origin station for this search.
        $ref: "#/definitions/Station"
      destination:
        description: Station object with details about the destination station for this search.
        $ref: "#/definitions/Station"
      itineraries:
        description: "Routes from the origin to the destination."
        type: array
        items:
          $ref: "#/definitions/TrainSearchItinerary"
  TrainSearchItinerary:
     required:
        - trains
     properties:
      trains:
        description: "The array of trains that will be required to complete the given itinerary. Since the cache currently only contains direct itineraries, there will be only one object in this array."
        type: array
        items:
          $ref: "#/definitions/TrainSearchSegment"
  Station:
     required:
        - station_code
        - station_name
     properties:
      station_code:
        type: string
        description: ID of this rail station
      station_name:
        type: string
        description: Full name of this rail station.
  TrainSearchSegment:
     required:
        - departs_at
        - arrives_at
        - departure_station
        - arrival_station
        - marketing_company
        - operating_company
        - train_number
        - prices
     properties:
      departs_at:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date-time of the train's departure in the local time zone of the departure station, in the format YYYY-MM-DDTHH:mm.
      arrives_at:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date-time of the train's arrival in the local time zone of the arrival station, in the format YYYY-MM-DDTHH:mm.
      departure_station:
        description: "The station object representing the station at which the passenger should board this train in order to complete this part of the itinerary."
        $ref: "#/definitions/Station"
      arrival_station:
        description: "The station object representing the station at which the passenger should disembark this train in order to complete this part of the itinerary."
        $ref: "#/definitions/Airport"       
      marketing_company:
        type: string
        description: "The name of the train company selling this train journey. This is the name you should see printed on your ticket."
      operating_company:
        type: string
        description: "The name of the train company operating this train journey. This is the name you should see written on the train."
      train_number:
        type: string
        description: "The identifying number of this train service. Usually the marketing company will only operate on train per day with this train number."
      train_type:
        type: string
        description: "The type of train that you may expect for this journey. For example&colon; InterCity, Regional..."
      prices:
        description: "Possible pricing for this train journey."
        type: array
        items:
          $ref: "#/definitions/TrainSearchPricing"
  TrainSearchPricing:
     required:
        - service_class
        - booking_code
        - accomodation
        - total_price
        - rate
     properties:
      service_class:
        type: string
        description: "A standard enumeration of the type of seat, bed or service the passenger can expect."
      booking_code:
        type: string
        description: A code the identifies the type of booking class being used.
      accomodation:
        type: string
        description: "A standard enumeration of the mode in which the passenger is accommodated. For example&colon; SEAT, BERTH, CABIN, CARGO, UNKNOWN."
      total_price:
        description: The total cost of this service.
        $ref: "#/definitions/Amount"       
      rate:
        description: A rate identifying type of charge being levied for this service, and the restrictions that apply.
        $ref: "#/definitions/RestrictedRate"    
  RestrictedRate:
     required:
        - rate_code
        - rate_name
        - restrictions
     properties:
      rate_code:
        type: string
        description: The unique identifier of this rate.
      rate_name:
        type: string
        description: The name used by the company to describe this rate.
      restrictions:
        type: string
        description: An enumeration of the type of restrictions associated with this rate.
  RailStationResponse:
     required:
        - id
        - type
        - name
        - short_name
        - country
        - location
        - traffic
     properties:
      id:
        type: string
        description: The ID of this station, as provided in the request
      type:
        type: string
        description: The type of code to which this station refers. Some codes represent agglomeration of multiple stations, whereas others represent an individual station. Possible values are AGGLOMERATION and STATION.
      name:
        type: string
        description: The name of this station.
      short_name:
        type: string
        description: "The shortened name of this station (20 characters max) which may be used in certain cases."
      country:
        type: string
        description: The <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 country code</a> in which this station can be found. 
      location:
        description: "This stations's approximate geolocation. "
        $ref: "#/definitions/Geolocation" 
      traffic:
        type: string
        description: An indication of the level of Intercity traffic passing through this station.
  TrainScheduleSearchResponse:
     properties:
      results:
        type: array
        items:
          $ref: "#/definitions/TrainScheduleSearchResult"
  TrainScheduleSearchResult:
     required:
        - origin_station_id
        - date
        - services
     properties:
      origin_station_id:
        type: string
        description: Station ID of the origin station for this search.
      date:
        type: string
        format: date
        description: The search date provided in the input.
      services:
        description: Array to describe service to the destinations.
        type: array
        items:
          $ref: "#/definitions/RailService"
  RailService:
     required:
        - destination_station_id
        - services
     properties:
      destination_station_id:
        type: string
        description: ID of the destination rail station.
      services:
        description: An array of departure times at which trains depart from the origin station to this destination station. Times are in the ISO 8601 YYYY-MM-DDTHH:mm format.
        type: array
        items:
          type: string
  TravelRecordResponse:
     required:
        - record_locator
     properties:
      record_locator:
        type: string
        description: 6 character identifier of this travel record on the Amadeus system.
      header:
        description: Summarized metadata on the record that has been retrieved.
        $ref: "#/definitions/TravelRecordHeader"
      messages:
        description: Functional or technical messages associated with the retrieval of this travel record.
        type: array
        items:
          $ref: "#/definitions/Message" 
      travelers:
        description: Information about each traveler who may be included as part of this travel record.
        type: array
        items:
          $ref: "#/definitions/Traveler" 
      reservation:
        description: Details about the itineraries that have been reserved as part of this travel record.
        $ref: "#/definitions/Reservation"     
  TravelRecordHeader:
     required:
        - creation_office_id
        - owner_office_id
     properties:
      creation_office_id:
        type: string
        description: 9 character Amadeus office identifier of the travel agency that created this travel record. An office ID may be considered as equivalent to a <a href="https://en.wikipedia.org/wiki/Pseudo_city_code">PCC</a> in other reservation systems.
      owner_office_id:
        type: string
        description: "9 character Amadeus office identifier of the travel agency that owns and manages this travel record."   
  Message:
     required:
        - severity
        - type
        - message
     properties:
      severity:
        type: string
        description: An indicator of the importance of this message as part of the flow. May be ERROR or INFO.
      type:
        type: string
        description: An indicator of the source or type of message that has been generated. May be USER or SYSTEM.
      message:
        type: string
        description: A free text message that provides more information.      
  Traveler:
     required:
        - id
        - last_name
        - first_name
        - traveler_type
     properties:
      id:
        type: string
        description: Uniquely identifies this traveler in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.
      last_name:
        type: string
        description: "The last name of the passenger, as entered by the agent, in upper-case. May include suffixes. For example&colon; THACKSTON, KING III, LU."
      first_name:
        type: string
        description: "The first name of the passenger, as entered by the agent, in upper-case. May include middle names, initials or prefixes. The total combined length of the first name and last name must be between 2 and 57 characters. For example&colon; ALEXANDRA, JOSE-ANTONIO MR, ELAINE T DR."
      traveler_type:
        type: string
        description: Enumeration of the type of traveler. May be ADULT or CHILD. 
      infant:
        description:  Details on any infant that may be sharing this seat with this traveler. Absence of this key indicates that no infant is traveling with this passenger. An empty object at this key indicated an anonymous infant is traveling with the passenger.
        $ref: "#/definitions/Infant"
      date_of_birth:
        type: string
        format: date
        description: An <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date indicating the birth date of the traveler, as provided by the agent. For example&colon; 1972-02-19.
      contacts:
        description: Details on how to contact this traveler. At least one traveler in a travel-record will have a contact element.
        type: array
        items:
          $ref: "#/definitions/Contact" 
      frequent_traveler_cards:
        description: Information regarding loyalty cards that the traveler would like to use to accrue benefits as part of this travel record. Where possible, the system will attempt to validate that the frequent traveler card is eligible for use in the context of this travel record.
        type: array
        items:
          $ref: "#/definitions/FrequentTravelerCard"      
  Infant:
     properties:
      last_name:
        type: string
        description: The last name of the infant, as entered by the agent, in upper-case. If no value is provided, the last name of the infant can generally be assumed to be the same as that of the traveler which whom they are associated.
      first_name:
        type: string
        description: The first name of the infant, as entered by the agent, in upper-case. May include middle names, initials or prefixes.
      date_of_birth:
        type: string
        format: date
        description: An optional <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date indicating the birth date of the infant, as provided by the agent. For example&colon; 1972-02-19.
  FrequentTravelerCard:
     required:
        - issuer_type
        - company_code
        - card_number
     properties:        
      issuer_type:
        type: string
        description: The type of organization that issued the card. This is an enumeration, possible values are AIRLINE, HOTEL_CHAIN, RENTAL_CAR_PROVIDER, RAILWAY.
      company_code:
        type: string
        description: "The identifying code of the issuer, within the context of its type. For example&colon; BA (and if the issuer type is AIRLINE, this indicates BA=British Airways)."
      card_number:
        type: string
        description: "The identifying number (or string) marked on the card. For example&colon; 12345678."
  Reservation:
     properties:
      flight_tickets:
        $ref: "#/definitions/FlightTicket"
      unticketed_flights:
        description: The flight itineraries in this reservation that have not yet been ticketed or priced.
        type: array
        items:
          $ref: "#/definitions/FlightReservationBound" 
      cars:
        description: The rental cars reserved.
        type: array
        items:
          $ref: "#/definitions/CarReservation" 
      hotels:
        description: The hotel room bookings in this reservation.
        type: array
        items:
          $ref: "#/definitions/HotelReservation"
      others:
        description: Free text information to represent other travel items that may be considered part of the travel itinerary in this reservation.
        type: array
        items:
          $ref: "#/definitions/OtherReservation"
  FlightTicket:
     required:
        - id
        - price
        - traveler_ids
        - flight_bounds
     description: The flight itineraries with a ticket or transitional stored ticket (TST) in this reservation, and their prices.
     properties:
      id:
        type: string
        description: Uniquely identifies this ticket in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record. 
      price:
        description: The cost of this ticket.
        $ref: "#/definitions/Amount"
      traveler_ids:
        description: Traveler identifiers to indicate the travelers to whom this ticket applies.
        type: array
        items:
          type: string
      flight_bounds:
        description: The flight itinerary for this ticket.
        type: array
        items:
          $ref: "#/definitions/FlightReservationBound"
  FlightReservationBound:
     required:
        - flights
     properties:
      flights:
        description: The individual flights that make up this itinerary. These flights are presented in the order required to fly from the origin to the destination, and the array of flights represents a connection.
        type: array
        items:
          $ref: "#/definitions/FlightReservationSegment"
  FlightReservationSegment:
     required:
        - id
        - departs_at
        - arrives_at
        - origin
        - destination
        - marketing_airline
        - operating_airline
        - flight_number
        - traveler_ids
        - booking_info
     properties:
      id:
        type: string
        description: Uniquely identifies this flight in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.
      departs_at:
        type: string
        description: Date and time of departure at the origin, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the origin airport
      arrives_at:
        type: string
        description: Date and time of departure at the destination, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the destination airport
      origin:
        description: "Information on the origin airport, from which this flight departs"
        $ref: "#/definitions/Airport"
      destination:
        description: "Information on the destination airport, at which this flight arrives"
        $ref: "#/definitions/Airport"       
      marketing_airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is responsible for the traveller this flight 
      operating_airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.
      flight_number:
        type: string
        description: "The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft's flight"
      traveler_ids:
        description: Traveler identifiers to indicate the travelers to whom this ticket applies.
        type: array
        items:
          type: string
      booking_info:
        description: "A booking information object with additional details about how the quality of this flight at the given price."
        $ref: "#/definitions/FlightReservationBookingInfo"
  FlightReservationBookingInfo:
     required:
        - travel_class
        - booking_code
        - airline_record_locator
        - status
     properties:
      travel_class:
        type: string
        description: The cabin class offered on this flight. An enumeration that will read either ECONOMY, PREMIUM_ECONOMY, BUSINESS or FIRST
      booking_code:
        type: string
        description: "The Reservation Booking Designator code that determines the quality and terms of the flight offered for the given price. A single letter from A..Z"
      airline_record_locator:
        type: string
        description: 6 character identifier of this travel record on the airline's system. May be the same as the global record locator.
      status:
        type: string
        description: "An enumeration to represent the reservation status for this seat on this flight. For example&colon; CONFIRMED, CANCELLED, RESCHEDULED, FLIGHT_CANCELLED, WAITLISTED."
  CarReservation:
     required:
        - id
        - provider
        - pick_up
        - drop_off
        - origin
        - car
     properties:
      id:
        type: string
        description: Uniquely identifies this car rental reservation in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.
      pick_up:
        type: string
        description: Date on which the car rental will be collected from the car rental location. <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-ddTHH.
      drop_off:
        type: string
        description: Date at which the car rental will end and the car will be returned to the rental location. <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-ddTHH.
      provider:
        description: Details of the car company offering this rental.
        $ref: "#/definitions/Company"
      origin:
        type: string
        description: This car rental company office location ID. If this is an airport location, this will be the airport's <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>. Otherwise, this is a custom value provided by the car rental provider.
      car:
        description: A car information object giving further details about the vehicle provided for rental.
        $ref: "#/definitions/Vehicle"
      traveler_ids:
        description: Traveler identifiers to indicate the travelers to whom this car rental applies. Generally, only drivers of the vehicle will be marked in this array.
        type: array
        items:
          type: string
      booking_info:
        description: Additional details the status of this car rental reservation.
        $ref: "#/definitions/CarReservationBookingInfo"
  CarReservationBookingInfo:
     required:
        - reservation_code
        - status
     properties:
      reservation_code:
        type: string
        description: The identifier of this reservation in the car rental provider's system. This should be provided at the rental office to identify your reservation.
      status:
        type: string
        description: "An enumeration to represent the reservation status for this car rental. For example&colon; CONFIRMED, CANCELLED, REQUESTED, REJECTED, PENDING_CANCELLATION, PENDING_CONFIRMATION."
  HotelReservation:
     required:
        - id
        - check_in
        - check_out
        - property_code
        - property_name
        - traveler_ids
        - booking_info
     properties:
      id:
        type: string
        description: Uniquely identifies this hotel room reservation in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.
      check_in:
        type: string
        format: date
        description: Date on which the guest will begin their stay in the hotel, in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd.
      check_out:
        type: string
        format: date
        description: Date on which the guest will end their stay in the hotel, in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd.
      property_code:
        type: string
        description: The 8 character property code of this given hotel. The first 2 characters of this code are the chain code that can be specified in the input. The remaining elements are proprietary to each hotel chain.
      property_name:
        type: string
        description: The name of this hotel.
      total_price:
        description: The total price of this stay, from the given check in date to the given check out date.
        $ref: "#/definitions/Amount"
      traveler_ids:
        description: Traveler identifiers to indicate the travelers to whom this hotel room reservation applies. Generally all non-infant room occupants will be marked in this array.
        type: array
        items:
          type: string
      booking_info:
        description: Additional details and status of this hotel room reservation.
        $ref: "#/definitions/HotelReservationBookingInfo"
  HotelReservationBookingInfo:
     required:
        - reservation_code
        - status
     properties:
      reservation_code:
        type: string
        description: The identifier of this reservation in the hotel chain's system. This should be provided at the check-in desk to identify your reservation.
      status:
        type: string
        description: "An enumeration to represent the reservation status for this hotel reservation. For example&colon; CONFIRMED, CANCELLED, REQUESTED."
  OtherReservation:
     required:
        - id
        - date
        - location
        - traveler_ids
        - booking_info
     properties:
      id:
        type: string
        description: Uniquely identifies this other reservation in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.
      date:
        type: string
        format: date
        description: Date on which this other reservation will begin, in the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format yyyy-MM-dd.
      location:
        type: string
        description: A 3 letter <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> that identifies where this other reservation will occur.
      description:
        type: string
        description: A free-text description of this reservation, that will inform you of its functional meaning.
      traveler_ids:
        description: Traveler identifiers to indicate the travelers to whom this reservation applies.
        type: array
        items:
          type: string
      booking_info:
        description: The status of this reservation.
        $ref: "#/definitions/OtherReservationBookingInfo"
  OtherReservationBookingInfo:
     required:
        - status
     properties:
      status:
        type: string
        description: "An enumeration to represent the reservation status for this hotel reservation. For example&colon; CONFIRMED, CANCELLED, REQUESTED, REJECTED, PENDING_CANCELLATION, PENDING_CONFIRMATION."
  AffiliateSearchResponse:
     required:
        - meta
     properties:
      meta:
        description: "Meta data about the results"
        $ref: "#/definitions/AffiliateSearchMeta" 
      results:
        type: array
        items:
          $ref: "#/definitions/AffiliateSearchResult" 
  AffiliateSearchMeta:
     required:
         - carriers
     properties:
      carriers:
        description: A map of meta information for each of the airlines involved in the response
        $ref: "#/definitions/CarrierMeta"
  CarrierMeta:
     type: object
     additionalProperties:
        $ref: "#/definitions/CarrierInfo"
  CarrierInfo:
      required:
          - name
          - logos
      properties:
       logos:
         description: Logos of the airline in a variety of sizes
         $ref: "#/definitions/Logos"
       name:
         description: Display name of the airline
         type: string
  Logos:
       properties:
         small:
           description: URL to logo of resolution 27x27px
           type: string
         medium:
           description: URL to logo of resolution 60x60px
           type: string
  AffiliateSearchResult:
     required:
        - fare
        - payout
        - outbound
        - airline
        - deep_link
     properties:
      outbound:
        description: The flight from the origin to the destination
        $ref: "#/definitions/FlightSearchBound"
      inbound:
        description: The return flight from the destination to the origin
        $ref: "#/definitions/FlightSearchBound"
      fare:
        description: The price and fare information which applies to all itineraries in this response
        $ref: "#/definitions/AffiliateFlightSearchPrice"
      payout:
        description: Details of the amount of payout that the affiliate will received per click or if this flight is sold
        $ref: "#/definitions/AffiliatePayout"
      airline:
        type: string
        description: The 2 character alphanumeric <a href="https://en.wikipedia.org/wiki/Airline_codes">IATA airline code</a> of the airline that is selling this result
      deep_link:
        description: A link to the page from which this result can be purchased from the affiliate
        type: string
  AffiliatePayout:
     properties:
       CPC:
         $ref: "#/definitions/Amount"
         description: See https://en.wikipedia.org/wiki/Pay_per_click for commission earned when the provided deep link is clicked
       CPA:
         $ref: "#/definitions/Amount"
         description: See https://en.wikipedia.org/wiki/Cost_per_action for commission earned for a given action from the provided deep link
       CPS:
         $ref: "#/definitions/Amount"
         description: See https://en.wikipedia.org/wiki/Pay_per_sale for commission earned as a result of a booking made from the provided deep link
  AffiliateFlightSearchPrice:
     required:
        - currency
        - total_price
        - price_per_adult
        - restrictions
     properties:
      currency:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/ISO_4217">currency</a> code applicable to this fare
      total_price:
        description: The total price for all the requested passengers for this flight
        type: string
      price_per_adult:
        description: "The per-passenger fare for each adult on this flight"     
        $ref: "#/definitions/Fare"
      price_per_child:
        description: "The per-passenger fare for each child on this flight"     
        $ref: "#/definitions/Fare"
      price_per_infant:
        description: "The per-passenger fare for each infant on this flight"        
        $ref: "#/definitions/Fare"
      restrictions:
        description: The restrictions associated with this fare
        $ref: "#/definitions/FareRestrictions"
      fees:
        description: The fees that apply in addition to the total price of this fare
        $ref: "#/definitions/Fees"
  Fees:
    properties:
      service_fees:
        type: string
        description: The cost of any required service fees in addition to the total price
      creditcard_fees:
        type: string
        description: The cost of any fees for common credit cards, such as Visa or Mastercard, in addition to the total price   
  TopDestinationsSearchResponse:
    required:
      - period
      - origin
      - results  
    properties:
      period:
        type: string
        description: The date period, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format YYYY-MM or YYYY
      origin:
        type: string
        description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>
      results:
        type: array
        items:
          $ref: "#/definitions/TopDestinationsSearchResult"
  TopDestinationsSearchResult:
     required:
        - destination
        - flights
        - travelers
     properties:
      destination:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city or airport to which the traveler may go, from the provided origin
      flights:
        type: integer
        description: Number of flights from origin to destination during the search period provided
      travelers:
        type: integer
        description: Number of passengers from origin to destination during the search period provided
  TopSearchesSearchResponse:
    required:
      - market
      - period
      - origin
      - destination
      - results  
    properties:
      market:
        type: string
        description: Country code
      period:
        type: string
        description: The date period, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format YYYY-MM or YYYY
      origin:
        type: string
        description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>
      destination:
        type: string
        description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>
      results:
        type: array
        items:
          $ref: "#/definitions/TopSearchesSearchResult"
  TopSearchesSearchResult:
     required:
        - destination
        - searches
        - searches_prior_year
     properties:
      destination:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city or airport to which the traveler may go, from the provided origin
      searches:
        type: integer
        description: Average number of daily searches for the destination during the search period provided
      searches_prior_year:
        type: integer
        description: Prior year average number of daily searches for the destination during the search period provided
  FlightTrafficSearchResponse:
    required:
      - period
      - origin
      - results  
    properties:
      period:
        type: string
        description: The date period, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date format YYYY-MM or YYYY
      origin:
        type: string
        description: <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a>
      results:
        type: array
        items:
          $ref: "#/definitions/FlightTrafficSearchResult"
  FlightTrafficSearchResult:
     required:
        - destination
        - flights
        - travelers
     properties:
      destination:
        type: string
        description: The <a href="https://en.wikipedia.org/wiki/International_Air_Transport_Association_airport_code">IATA code</a> of the city or airport to which the traveler may go, from the provided origin
      flights:
        type: integer
        description: Number of flights from origin to destination during the search period provided
      travelers:
        type: integer
        description: Number of passengers from origin to destination during the search period provided
  PointsOfInterestResponse:
     required:
        - points_of_interest
     properties:
      current_city:
        $ref: "#/definitions/PointOfInterestCity"
      points_of_interest:
        type: array
        items:
          $ref: "#/definitions/PointOfInterestResult"
  PointOfInterestCity:
     required:
        - name
        - location
        - total_points_of_interest
     properties:
      name:
        type: string
        description: The name of the location that was searched for
      geoname_id:
        type: string
        description: The Geonames ID of the location that was searched for
      location:
        $ref: "#/definitions/Geolocation"
      total_points_of_interest:
        type: integer
        description: The total number of points_of_interest that YapQ has indexed for this city
  PointOfInterestResult:
     required:
        - title
        - main_image
        - grades
        - categories
        - location
     properties:
      title:
        type: string
        description: Display name of a given point of interest
      main_image:
        type: string
        description: A link to an image of the given location
      location:
        $ref: "#/definitions/Geolocation"
      grades:
        type: object
        description: Result availble grades.
        properties:
          yapq_grade:
            type: integer
            description: Main YAPQ grade. A grade out of 5 for this point, rated against all points in the world and normalized among selected group of points. 5 is best, 0 is worst.
          city_grade:
            type: integer
            description: The ranking of this point of interest compared to other points in this city. 1 is the highest rated.
      categories:
        type: array
        description: Array of descriptions indicating what type of point of interest this is. You can filter the results to include only certain categories of point of interest using the category input parameter.
        items:
          type: string
      details:
        $ref: "#/definitions/PointOfInterestDetails"
      contextual_images:
        type: array
        description: Images taken at this point of interest. Note that these images might have nothing to do with the point itself, particularly if you have enabled the social_media parameter
        items:
            $ref: "#/definitions/ImageSize"
      geoname_id:
        type: integer
        description: The GeonamesID of this point of interest, if available
      walk_time:
        type: number
        description: Time in minutes that it takes to walk from the searched coordinates to this Point of Interest
  PointOfInterestDetails:
     required:
        - short_description
        - description
        - wiki_page_link
     properties:
      short_description:
        type: string
        description: A summary of the given point
      description:
        type: string
        description: A paragraph describing this point of interest
      wiki_page_link:
        type: string
        description: A link to this point of interest&quot;s wikipedia page
  ImageSize:
     description: An image size selector used in the YapQ API response. The size should correspond the the image_size parameter used during input
     properties:
      small:
        $ref: "#/definitions/Image"
      medium:
        $ref: "#/definitions/Image"
      large:
        $ref: "#/definitions/Image"
      hd:
        $ref: "#/definitions/Image"
